name: NomadCafe
on:
  push:
    branches:
      - master
      - develop
      - feature/cicd
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v1

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.aws_access_key }}
        aws-secret-access-key: ${{ secrets.aws_secret_key }}
        aws-region: ap-northeast-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: nomad-cafe
      run: |
        cd $GITHUB_WORKSPACE
        GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")
        VERSION=`cat ./version.txt`
        GIT_COMMIT_MSG=`git show -s`

        # web
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION -f Dockerfile_with_apm .
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

        # nginx
        docker build -t $ECR_REGISTRY/nomad-cafe-nginx:$VERSION -f Dockerfile_nginx .
        docker tag $ECR_REGISTRY/nomad-cafe-nginx:$VERSION $ECR_REGISTRY/nomad-cafe-nginx:latest
        docker push $ECR_REGISTRY/nomad-cafe-nginx:$VERSION
        docker push $ECR_REGISTRY/nomad-cafe-nginx:latest

        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        echo "::set-output name=version::$VERSION-$GIT_HASH"
        echo "::set-output name=git-commit-msg::$GIT_COMMIT_MSG"
    - name: Create Release
      id: create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.build-image.outputs.version }}
        release_name: Release ${{ steps.build-image.outputs.version }}
        body: |
          ${{ steps.build-image.outputs.git-commit-msg }}
        draft: false
        prerelease: false
